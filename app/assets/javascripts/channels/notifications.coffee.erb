<% environment.context_class.instance_eval { include NotificationsHelper } %>
<% environment.context_class.instance_eval { include SessionsHelper } %>

App.notifications = App.cable.subscriptions.create "NotificationsChannel",
  connected: ->
    # Called when the subscription is ready for use on the server

  disconnected: ->
    # Called when the subscription has been terminated by the server

  received: (data) ->
    if (parseInt(data["notification"]) == parseInt($("#current_user_id").html()))
      noti()
      if ($('.number_ground').html().trim() == "")
        $('.number_ground').html("
          <div class='noti_number' id='noti_number'>
            1
          </div>")
      else
        $('#noti_number').html((parseInt($('#noti_number').html()) + 1))
  speak: (notification) ->
    @perform 'speak', notification: notification

$(document).on "click", "#like_button", ->
  App.notifications.speak(this.value)

$(document).on "click", "#follow_button", ->
  App.notifications.speak($(this).attr("user_follwed_id"))

$(document).on "click", "#post_button", ->
  ids = $(".caption-box").html()
  pattern = /\"\/users\/(.*?)\"/g
  while((matches = pattern.exec(ids)) != null)
    App.notifications.speak(matches[1])


noti = `function noti(){
  if (Notification.permission === "granted") {
    var notification = new Notification("Rubylicious", {
      icon: "<%= asset_path 'header/t.png'%>",
      body: "You've been received new notification!",
    });

    notification.onclick = function () {
      window.open("https://github.com/");
    };

    setTimeout(function(){
      notification.close();
    },5000);
  } else {
    Notification.requestPermission();
  }
}`

$(".comment-box").on 'keypress', (event) ->
  if event.keyCode is 13 #return = send
    alert("s")
